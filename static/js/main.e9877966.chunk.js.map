{"version":3,"sources":["images/joel.jpg","images sync /^/.//.*/.jpg$","images/daniel.jpg","images/david.jpg","images/edgar.jpg","images/ian.jpg","images/linnea.jpg","images/ray.jpg","components/Header/Header.tsx","ImagesArray.ts","components/Card/Card.tsx","components/Timer/Timer.tsx","components/Cards/Cards.tsx","App.tsx","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","times","Card","name","handleClick","className","data-name","onClick","src","require","alt","duplicateImages","reduce","res","current","concat","Array","fill","Timer","gameOver","seconds","setSeconds","setGameTime","useEffect","timer","clearInterval","setInterval","Math","floor","Cards","useState","lastClicked","setLastClicked","setGameOver","cardsMatched","setCardsMatched","gameTime","cardsDivs","document","querySelectorAll","shuffleCards","Images","length","handleGameOver","array","i","j","random","console","log","event","currentClicked","currentTarget","classList","add","undefined","getAttribute","dataset","setTimeout","remove","prevState","resetGame","forEach","card","window","confirm","image","index","key","App","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9877966.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/joel.6dd4c14e.jpg\";","var map = {\n\t\"./daniel.jpg\": 22,\n\t\"./david.jpg\": 23,\n\t\"./edgar.jpg\": 24,\n\t\"./ian.jpg\": 25,\n\t\"./joel.jpg\": 5,\n\t\"./linnea.jpg\": 26,\n\t\"./ray.jpg\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/daniel.1e4d7ad3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/david.1eadd4b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/edgar.21923eb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ian.527f64f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linnea.fbd77439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ray.3d17f0b3.jpg\";","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Memory Card Game</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","const images: string[] = [\"daniel\", \"david\", \"edgar\", \"ian\", \"linnea\", \"ray\"];\n\nconst duplicateImages = (array: string[], times: number): string[] => {\n  return array.reduce((res: string[], current) => {\n    return res.concat(Array(times).fill(current));\n  }, []);\n};\n\nexport default duplicateImages(images, 2);\n","import React from \"react\";\n\ninterface cardProps {\n  name: string;\n  handleClick: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Card: React.FC<cardProps> = ({ name, handleClick }) => {\n  return (\n    <div className=\"memory-card\" data-name={name} onClick={handleClick}>\n      <img\n        className=\"back\"\n        src={require(\"../../images/joel.jpg\")}\n        alt=\"Card Back\"\n      />\n      <img\n        className=\"front\"\n        src={require(`../../images/${name}.jpg`)}\n        alt=\"Card Front\"\n      />\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect } from \"react\";\n\ninterface timerProps {\n  gameOver: boolean;\n  seconds: number;\n  setGameTime: (prevState: number) => void;\n  setSeconds: (prevState: number) => void;\n}\n\nconst Timer: React.FC<timerProps> = ({\n  gameOver,\n  seconds,\n  setSeconds,\n  setGameTime,\n}) => {\n  // const [seconds, setSeconds] = useState<number>(0);\n\n  useEffect(() => {\n    let timer: any = null;\n    if (!gameOver) {\n      timer = setInterval(() => {\n        setSeconds(seconds + 1);\n      }, 1000);\n      setGameTime(seconds);\n    } else if (gameOver && seconds !== 0) {\n      clearInterval(timer);\n    }\n    return () => clearInterval(timer);\n  }, [gameOver, seconds, setGameTime, setSeconds]);\n\n  return (\n    <p>\n      Timer:{\" \"}\n      {Math.floor(seconds / 60) < 10\n        ? `0${Math.floor(seconds / 60)}`\n        : Math.floor(seconds / 60)}\n      :{seconds % 60 < 10 ? `0${seconds % 60}` : seconds % 60}\n    </p>\n  );\n};\n\nexport default Timer;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Cards.css\";\nimport Card from \"../Card/Card\";\nimport Images from \"../../ImagesArray\";\nimport Timer from \"../Timer/Timer\";\n\nfunction Cards() {\n  const [lastClicked, setLastClicked] = useState<HTMLElement>();\n  const [gameOver, setGameOver] = useState(false);\n  const [cardsMatched, setCardsMatched] = useState<string[]>([]);\n  const [seconds, setSeconds] = useState<number>(0);\n  const [gameTime, setGameTime] = useState<number>(0);\n\n  const cardsDivs = document.querySelectorAll(\".memory-card\");\n\n  useEffect(() => {\n    shuffleCards(Images);\n  }, []);\n\n  useEffect(() => {\n    if (cardsMatched.length === 6) {\n      handleGameOver();\n    }\n  });\n\n  const shuffleCards = (array: string[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      // using destructurig to swap array[i] and array [j]\n      // same as temp = array[i] array[i] = array[j] array[j] = temp\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  const handleGameOver = () => {\n    setGameOver(true);\n    console.log({ gameTime });\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    const currentClicked: HTMLElement = event.currentTarget;\n    currentClicked.classList.add(\"flip\");\n    if (!lastClicked) {\n      setLastClicked(currentClicked);\n    } else {\n      setLastClicked(undefined);\n      if (\n        lastClicked.getAttribute(\"data-name\") === currentClicked.dataset.name\n      ) {\n        setTimeout(() => {\n          lastClicked.classList.add(\"image-opacity\");\n          currentClicked.classList.add(\"image-opacity\");\n          lastClicked.classList.remove(\"flip\");\n          currentClicked.classList.remove(\"flip\");\n        }, 500);\n        setCardsMatched((prevState) => [\n          ...prevState,\n          currentClicked.dataset.name || \"\",\n        ]);\n      } else {\n        setTimeout(() => {\n          lastClicked.classList.remove(\"flip\");\n          currentClicked.classList.remove(\"flip\");\n        }, 800);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    shuffleCards(Images);\n    setCardsMatched([]);\n    setGameOver(false);\n    setSeconds(0);\n    cardsDivs.forEach((card) => {\n      card.classList.remove(\"flip\", \"image-opacity\");\n    });\n  };\n\n  const handleStartGame = () => {\n    gameOver && resetGame();\n    if (!gameOver) {\n      if (window.confirm(\"Are you sure you want to start a new game?\")) {\n        resetGame();\n      }\n    }\n  };\n\n  return (\n    <>\n      {gameOver === true ? (\n        <>\n          <h2>Game Over!!!</h2>\n          <h3>\n            Time Played:{\" \"}\n            {Math.floor(gameTime / 60) < 10\n              ? `0${Math.floor(gameTime / 60)}`\n              : Math.floor(gameTime / 60)}{\" \"}\n            : {gameTime % 60 < 10 ? `0${gameTime % 60}` : gameTime % 60}\n          </h3>\n        </>\n      ) : (\n        <Timer\n          gameOver={gameOver}\n          seconds={seconds}\n          setGameTime={setGameTime}\n          setSeconds={setSeconds}\n        />\n      )}\n      <button onClick={handleStartGame}>Start New Game</button>\n\n      <div className=\"card-container\">\n        {Images.map((image, index) => {\n          return <Card key={index} name={image} handleClick={handleClick} />;\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Cards from \"./components/Cards/Cards\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Cards />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}